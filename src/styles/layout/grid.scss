$grid-columns: 12;

@mixin grid-column-size($nc) {
  --bs-columns: #{$nc};
  grid-template-columns: repeat(var(--bs-columns, 12), 1fr);
}
@mixin grid-column-width($nc) {
  $tnc: #{$nc - 1};
  $column-width: calc((100% - var(--gap) * #{$tnc}) / #{$nc});
  grid-template-columns: repeat($nc, $column-width);
}

.grid {
  display: grid;
  grid-template-columns: 100%;
  column-gap: var(--gap);
  width: calc(100% - 2rem);
  margin-left: 1rem;
  margin-right: 1rem;
  max-width: var(--max-width);

  &.row-gap {
    grid-row-gap: var(--gap);
  }
  @for $i from 0 through 8 {
    &.gap-row-#{$i} {
      grid-row-gap: #{$l-unit * $i};
    }
  }

  @each $bp, $width in $breakpoints {
    @include from($bp) {
      @for $i from 1 through $grid-columns {
        @if $i == 1 {
          &.bc-1-#{$bp} {
            // --bs-columns: 1 grid-template-columns: 100%;
            grid-template-columns: 100%;
          }
        }
        @if $i > 1 {
          &.#{$bp}-bc-#{$i} {
            @include grid-column-width($i);
          }
        }
        .col-#{$i}-#{$bp} {
          grid-column: auto/span $i;
        }
      }
    }
  }
}
